be_sysdir = ../../../../enginebasic/init_dir/sys
arm_cross_compile = ../../../../buildroot/output_opi/host/bin/arm-buildroot-linux-uclibcgnueabihf-
x64_cross_compile = ../../../../buildroot/output_pc/host/bin/x86_64-buildroot-linux-uclibc-

common_flags = -O3 -fPIC -Wall -I. -I${be_sysdir}/include -DPIXEL_TYPE=uint32_t -DIPIXEL_TYPE=uint32_t
arm_cflags = $common_flags
x64_cflags = $common_flags

rule link
  command = ${cross_compile}g++ -nostdlib -shared -o $out $in

rule cxx
  command = ${cross_compile}g++ $cflags -c -o $out $in

build sam_arm.so: link debug_arm.o ESP8266SAM_arm.o reciter_arm.o render_arm.o sam_core_arm.o module_arm.o
  cross_compile = $arm_cross_compile
build sam_x86_64.so: link debug_x86_64.o ESP8266SAM_x86_64.o reciter_x86_64.o render_x86_64.o sam_core_x86_64.o module_x86_64.o
  cross_compile = $x64_cross_compile

default sam_arm.so sam_x86_64.so

build debug_arm.o: cxx debug.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build ESP8266SAM_arm.o: cxx ESP8266SAM.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build module_arm.o: cxx module.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build reciter_arm.o: cxx reciter.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build render_arm.o: cxx render.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build sam_core_arm.o: cxx sam_core.cpp
  cflags = $arm_cflags
  cross_compile = $arm_cross_compile

build debug_x86_64.o: cxx debug.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile

build ESP8266SAM_x86_64.o: cxx ESP8266SAM.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile

build module_x86_64.o: cxx module.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile

build reciter_x86_64.o: cxx reciter.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile

build render_x86_64.o: cxx render.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile

build sam_core_x86_64.o: cxx sam_core.cpp
  cflags = $x64_cflags
  cross_compile = $x64_cross_compile
